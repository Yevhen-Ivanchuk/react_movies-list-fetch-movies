{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","query","setQuery","setMovie","isLoading","setIsLoading","isError","setIsError","prev","onSubmit","e","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","some","prevMovie","prevMovies","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6abe898.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div\n    className=\"card\"\n    data-cy=\"movieCard\"\n  >\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p\n            className=\"title is-8\"\n            data-cy=\"movieTitle\"\n          >\n            {movie.title}\n          </p>\n        </div>\n      </div>\n\n      <div\n        className=\"content\"\n        data-cy=\"movieDescription\"\n      >\n        {movie.description}\n        <br />\n        <a\n          href={movie.imdbUrl}\n          data-cy=\"movieURL\"\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { ChangeEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [prev] = useState<Movie[]>([]);\n\n  const handleFindMovie = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setMovie(null);\n    setIsLoading(true);\n    setIsError(false);\n\n    getMovie(query)\n      .then((res) => {\n        if ('Error' in res) {\n          setIsError(true);\n\n          return;\n        }\n\n        if ('Title' in res) {\n          const {\n            Title,\n            Plot,\n            Poster,\n            imdbID,\n          } = res;\n\n          setMovie({\n            title: Title,\n            description: Plot,\n            imgUrl:\n              Poster !== 'N/A'\n                ? Poster\n                : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${imdbID}/`,\n            imdbId: imdbID,\n          });\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleAddMovieToList = () => {\n    if (movie) {\n      const hasMovie = prev.some(\n        (prevMovie) => prevMovie.imdbId === movie.imdbId,\n      );\n\n      if (!hasMovie) {\n        setMovies((prevMovies) => [...prevMovies, movie]);\n      }\n    }\n\n    setQuery('');\n  };\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setIsError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFindMovie}\n      >\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"movie-title\"\n          >\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          {isError && (\n            <p\n              className=\"help is-danger\"\n              data-cy=\"errorMessage\"\n            >\n              Can`t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!query}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovieToList}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div\n        className=\"container\"\n        data-cy=\"previewContainer\"\n      >\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=fcb2c2f2';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then((res) => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}